-- CONSULTA 1 - LISTAR TODAS AS VAGAS QUE UM ALUNO PODE PARTICIPAR E SE JÁ ESTÁ PARTICIPANDO OU NÃO, BASEADO EM SEU GRUPO
SELECT V.FUNCAO, GV.GRUPO, CASE WHEN AV.ALUNO IS NULL THEN 'NAO' ELSE 'SIM' END AS PARTICIPANDO FROM PESSOA P JOIN ALUNO_GRUPO AG
      ON P.ID = AG.ALUNO JOIN GRUPO_VAGA GV
      ON AG.GRUPO = GV.GRUPO LEFT JOIN ALUNO_VAGA AV
      ON GV.VAGA = AV.VAGA AND AV.ALUNO = P.ID JOIN VAGA V
      ON GV.VAGA = V.ID
      WHERE P.CPF = '02272659047'
      GROUP BY V.FUNCAO, GV.GRUPO, CASE WHEN AV.ALUNO IS NULL THEN 'NAO' ELSE 'SIM' END;
       
-- CONSULTA 2 (DIVISÃO) - LISTA DE ALUNOS QUE ESTÃO CURSANDO TODOS OS CURSOS
SELECT P.CPF, P.NOME FROM PESSOA P WHERE
       NOT EXISTS((SELECT ID FROM CURSO)
                   MINUS (SELECT C.ID FROM CURSO C JOIN ALUNO_CURSO AC
                          ON C.ID = AC.CURSO AND P.ID = AC.ALUNO AND AC.STATUS = 'EM PROGRESSO'));
                          

-- CONSULTA 3 - EVENTO COM O MAIOR NÚMERO DE PARTICIPANTES
SELECT EV.NOME, EV.TIPO, EV.DATA_HORA, EV.MODALIDADE, EM.NOME AS NOME_EMPRESA, COUNT(AE.ALUNO) AS N_PARTICIPANTES FROM EVENTO EV JOIN EMPRESA EM
       ON EV.EMPRESA = EM.CNPJ JOIN ALUNO_EVENTO AE
       ON EV.NOME = AE.NOME AND EM.CNPJ = AE.EMPRESA
       GROUP BY EV.NOME, EV.TIPO, EV.DATA_HORA, EV.MODALIDADE, EM.NOME
       HAVING COUNT(AE.ALUNO) = (SELECT MAX(COUNT(AE.ALUNO))
                                 FROM ALUNO_EVENTO AE
                                 GROUP BY AE.NOME);

-- CONSULTA 4 - DADOS DAS PESSOAS QUE PROTAGONIZARAM A TROCA DE MENSAGEM COM O MAIOR CONTEÚDO
SELECT P1.NOME AS PESSOA_1, P2.NOME AS PESSOA_2 FROM (SELECT M.PESSOA1, M.PESSOA2, LENGTH(M.CONTEUDO) AS TAMANHO FROM MENSAGEM M
                                   GROUP BY M.PESSOA1, M.PESSOA2, LENGTH(M.CONTEUDO)
                                   HAVING LENGTH(M.CONTEUDO) = (SELECT MAX(LENGTH(M.CONTEUDO)) FROM MENSAGEM M)) AUX JOIN PESSOA P1
                                   ON P1.ID = AUX.PESSOA1 JOIN PESSOA P2
                                   ON P2.ID = AUX.PESSOA2;

-- CONSULTA 5 - DADO UM ANO, RETORNA-SE A QUANTIDADE DE PUBLICAÇÕES CURTIDAS POR PESSOA.                        
SELECT P.NOME AS PESSOA_CURTE, COUNT(PCP.PESSOA) AS QUANTIDADE, EXTRACT(YEAR FROM PUB.DATA_HORA) AS YEAR FROM PESSOA_CURTE_PUBLICACAO PCP JOIN PUBLICACAO PUB
         ON PUB.ID = PCP.PUBLICACAO JOIN PESSOA P
         ON PCP.PESSOA = P.ID
         WHERE EXTRACT(YEAR FROM PUB.DATA_HORA) = '2022'
         GROUP BY P.NOME, EXTRACT(YEAR FROM PUB.DATA_HORA)
         ORDER BY(P.NOME);