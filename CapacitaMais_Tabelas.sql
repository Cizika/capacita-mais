CREATE TABLE EMPRESA(
    CNPJ CHAR(14) NOT NULL,
    NOME VARCHAR2(15),
    AREA_ATUACAO VARCHAR2(30),
    LOGRADOURO VARCHAR2(50),
    BAIRRO VARCHAR2(50),
    CIDADE VARCHAR2(20),
    CEP NUMBER(8),
    UF CHAR(2),
    COMPLEMENTO VARCHAR2(20),
    CONSTRAINT PK_EMPRESA PRIMARY KEY (CNPJ),
    CONSTRAINT CK_CNPJ CHECK(LENGTH(CNPJ) = 14),
    CONSTRAINT CK_EMPRESA_UF CHECK(LENGTH(UF) = 2)
);

CREATE TABLE GRUPO(
    NOME VARCHAR2(35) NOT NULL,
    CONSTRAINT PK_GRUPO PRIMARY KEY (NOME)
);

CREATE TABLE DIFICULDADES(
    GRUPO VARCHAR2(35) NOT NULL,
    DIFICULDADE VARCHAR2(35) NOT NULL,
    CONSTRAINT PK_DIFICULDADES PRIMARY KEY (GRUPO, DIFICULDADE),
    CONSTRAINT FK_DIFICULDADES FOREIGN KEY (GRUPO)
        REFERENCES GRUPO(NOME)
        ON DELETE CASCADE
);

CREATE TABLE PESSOA(
    ID NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL,
    EMAIL VARCHAR2(40) NOT NULL,
    NOME VARCHAR2(50),
    CPF CHAR(11) NOT NULL,
    DATA_NASCIMENTO DATE,
    TELEFONE NUMBER(11),
    LOGRADOURO VARCHAR2(50),
    BAIRRO VARCHAR2(50),
    CIDADE VARCHAR2(20),
    CEP NUMBER(8),
    UF CHAR(2),
    COMPLEMENTO VARCHAR2(20),
    CONSTRAINT PK_PESSOA PRIMARY KEY (ID),
    CONSTRAINT SK_KEY UNIQUE(EMAIL),
    CONSTRAINT TK_KEY UNIQUE(CPF),
    CONSTRAINT CK_CPF CHECK(LENGTH(CPF) = 11),
    CONSTRAINT CK_PESSOA_UF CHECK(LENGTH(UF) = 2)
);

CREATE TABLE FUNCAO(
    PESSOA NUMBER NOT NULL,
    FUNCAO VARCHAR2(20) NOT NULL,
    CONSTRAINT PK_FUNCAO PRIMARY KEY (PESSOA, FUNCAO),
    CONSTRAINT FK_FUNCAO FOREIGN KEY (PESSOA)
        REFERENCES PESSOA(ID)
        ON DELETE CASCADE,
    CONSTRAINT CK_FUNCAO CHECK(UPPER(FUNCAO) IN ('ADMINISTRADOR', 'PROFESSOR', 'MINISTRANTE', 'ALUNO'))
);

CREATE TABLE ADMINISTRADOR(
    ID NUMBER,
    CONSTRAINT PK_ADMINISTRADOR PRIMARY KEY (ID),
    CONSTRAINT FK_ADMINISTRADOR FOREIGN KEY (ID)
        REFERENCES PESSOA(ID)
        ON DELETE CASCADE
);

CREATE TABLE MINISTRANTE(
    ID NUMBER,
    CONSTRAINT PK_MINISTRANTE PRIMARY KEY (ID),
    CONSTRAINT FK_MINISTRANTE FOREIGN KEY (ID)
        REFERENCES PESSOA(ID)
        ON DELETE CASCADE
);

CREATE TABLE PROFESSOR(
    ID NUMBER,
    CONSTRAINT PK_PROFESSOR PRIMARY KEY (ID),
    CONSTRAINT FK_PROFESSOR FOREIGN KEY (ID)
        REFERENCES PESSOA(ID)
        ON DELETE CASCADE
);

CREATE TABLE FORMACAO(
    PROFESSOR NUMBER NOT NULL, 
    FORMACAO VARCHAR2(30) NOT NULL,
    CONSTRAINT PK_FORMACAO PRIMARY KEY (PROFESSOR, FORMACAO),
    CONSTRAINT FK_FORMACAO FOREIGN KEY (PROFESSOR)
        REFERENCES PROFESSOR(ID)
        ON DELETE CASCADE
);

CREATE TABLE ALUNO(
    ID NUMBER,
    ESCOLARIDADE VARCHAR2(20),
    EXPERIENCIA_PROFISSIONAL VARCHAR2(20),
    CONSTRAINT PK_ALUNO PRIMARY KEY (ID),
    CONSTRAINT FK_ALUNO FOREIGN KEY (ID)
        REFERENCES PESSOA(ID)
        ON DELETE CASCADE
);

CREATE TABLE EVENTO (
    EMPRESA CHAR(14) NOT NULL,
    NOME VARCHAR2(30) NOT NULL, 
    TIPO VARCHAR2(20),
    DATA_HORA DATE,
    DURACAO NUMBER,
    MODALIDADE VARCHAR(10),
    LOGRADOURO VARCHAR2(50),
    BAIRRO VARCHAR2(50),
    CIDADE VARCHAR2(20),
    CEP NUMBER(8),
    UF CHAR(2),
    COMPLEMENTO VARCHAR2(20),
    GRUPO VARCHAR2(35),
    CONSTRAINT PK_EVENTO PRIMARY KEY (EMPRESA, NOME),
    CONSTRAINT FK1_EVENTO FOREIGN KEY (EMPRESA)
        REFERENCES EMPRESA(CNPJ)
        ON DELETE CASCADE,
    CONSTRAINT FK2_EVENTO FOREIGN KEY (GRUPO)
        REFERENCES GRUPO(NOME)
        ON DELETE CASCADE,
    CONSTRAINT CK_MODALIDADE CHECK(UPPER(MODALIDADE) IN ('PRESENCIAL', 'ONLINE')),
    CONSTRAINT CK_EVENTO_UF CHECK(LENGTH(UF) = 2)
);

CREATE TABLE MINISTRANTE_EVENTO(
    EMPRESA CHAR(14) NOT NULL,
    NOME VARCHAR2(20) NOT NULL,
    MINISTRANTE NUMBER NOT NULL,
    CONSTRAINT PK_MINISTRANTE_EVENTO PRIMARY KEY (NOME, EMPRESA, MINISTRANTE),
    CONSTRAINT FK1_MINISTRANTE_EVENTO FOREIGN KEY (EMPRESA, NOME)
        REFERENCES EVENTO(EMPRESA, NOME)
        ON DELETE CASCADE,
    CONSTRAINT FK2_MINISTRANTE_EVENTO FOREIGN KEY (MINISTRANTE)
        REFERENCES MINISTRANTE(ID)
        ON DELETE CASCADE
);

CREATE TABLE ALUNO_EVENTO(
    EMPRESA CHAR(14) NOT NULL,
    NOME VARCHAR2(20) NOT NULL,
    ALUNO NUMBER NOT NULL,
    CONSTRAINT PK_ALUNO_EVENTO PRIMARY KEY (NOME, EMPRESA, ALUNO),
    CONSTRAINT FK1_ALUNO_EVENTO FOREIGN KEY (NOME, EMPRESA)
        REFERENCES EVENTO(NOME, EMPRESA)
        ON DELETE CASCADE,
    CONSTRAINT FK2_ALUNO_EVENTO FOREIGN KEY (ALUNO)
        REFERENCES ALUNO(ID)
        ON DELETE CASCADE
);

CREATE TABLE VAGA(
    ID NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL,
    EMPRESA CHAR(14) NOT NULL,
    FUNCAO VARCHAR2(35) NOT NULL,
    SALARIO NUMBER,
    DESCRICAO VARCHAR2(300),
    CONSTRAINT PK_VAGA PRIMARY KEY (ID),
    CONSTRAINT SK_VAGA UNIQUE (EMPRESA, FUNCAO)
);

CREATE TABLE ALUNO_VAGA(
    ALUNO NUMBER NOT NULL,
    VAGA NUMBER NOT NULL,
    CONSTRAINT PK_ALUNO_VAGA PRIMARY KEY (ALUNO, VAGA),
    CONSTRAINT FK1_ALUNO_VAGA FOREIGN KEY (ALUNO)
        REFERENCES ALUNO(ID)
        ON DELETE CASCADE,
    CONSTRAINT FK2_ALUNO_VAGA FOREIGN KEY (VAGA)
        REFERENCES VAGA(ID)
        ON DELETE CASCADE
);

CREATE TABLE GRUPO_VAGA(
    GRUPO VARCHAR2(35) NOT NULL,
    VAGA NUMBER NOT NULL,
    CONSTRAINT PK_GRUPO_VAGA PRIMARY KEY (GRUPO, VAGA),
    CONSTRAINT FK1_GRUPO_VAGA FOREIGN KEY (GRUPO)
        REFERENCES GRUPO(NOME)
        ON DELETE CASCADE,
    CONSTRAINT FK2_GRUPO_VAGA FOREIGN KEY (VAGA)
        REFERENCES VAGA(ID)
        ON DELETE CASCADE
);

CREATE TABLE ALUNO_GRUPO(
    ALUNO NUMBER NOT NULL,
    GRUPO VARCHAR2(35) NOT NULL,
    CONSTRAINT PK_ALUNO_GRUPO PRIMARY KEY (ALUNO, GRUPO),
    CONSTRAINT FK1_ALUNO_GRUPO FOREIGN KEY (ALUNO)
        REFERENCES ALUNO(ID)
        ON DELETE CASCADE,
    CONSTRAINT FK2_ALUNO_GRUPO FOREIGN KEY (GRUPO)
        REFERENCES GRUPO(NOME)
        ON DELETE CASCADE
);

CREATE TABLE CURSO(
    ID NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL,
    NOME VARCHAR2(35) NOT NULL,
    DATA_INICIO DATE NOT NULL,
    TIPO VARCHAR2(35),
    DATA_CONCLUSAO DATE,
    ACESSIBILIDADE VARCHAR2(50),
    GRUPO VARCHAR2(35) NOT NULL,
    PROFESSOR NUMBER NOT NULL,
    CONSTRAINT PK_CURSO PRIMARY KEY (ID),
    CONSTRAINT FK1_CURSO FOREIGN KEY (GRUPO)
        REFERENCES GRUPO(NOME)
        ON DELETE CASCADE,    
    CONSTRAINT FK2_CURSO FOREIGN KEY (PROFESSOR)
        REFERENCES PROFESSOR(ID)
        ON DELETE CASCADE,
    CONSTRAINT SK_CURSO UNIQUE(NOME, DATA_INICIO)
);

CREATE TABLE AULA(
    CURSO NUMBER NOT NULL,
    TOPICO_AULA VARCHAR2(30) NOT NULL,
    MODALIDADE CHAR(7) NOT NULL, 
    DESCRICAO VARCHAR2(200),
    DURACAO VARCHAR2(20),
    IDIOMA VARCHAR2(20), 
    LINK VARCHAR2(100),
    MATERIAIS VARCHAR(150),
    LEGENDA CHAR(1),
    DATA_HORA DATE,
    CONSTRAINT PK_AULA PRIMARY KEY (CURSO, TOPICO_AULA),
    CONSTRAINT FK_AULA FOREIGN KEY (CURSO)
        REFERENCES CURSO(ID)
        ON DELETE CASCADE,
    CONSTRAINT CK2_MODALIDADE CHECK (UPPER(MODALIDADE) IN ('AO VIVO', 'GRAVADA')),
    CONSTRAINT CK_LEGENDA CHECK(LEGENDA IN ('0', '1'))
);

CREATE TABLE ALUNO_CURSO(
    ALUNO NUMBER NOT NULL,
    CURSO NUMBER NOT NULL,
    STATUS VARCHAR2(15),
    CONSTRAINT PK_ALUNO_CURSO PRIMARY KEY (ALUNO, CURSO),
    CONSTRAINT FK1_ALUNO_CURSO FOREIGN KEY (ALUNO)
        REFERENCES ALUNO(ID)
        ON DELETE CASCADE,
    CONSTRAINT FK2_ALUNO_CURSO FOREIGN KEY (CURSO)
        REFERENCES CURSO(ID)
        ON DELETE CASCADE,
    CONSTRAINT CK_STATUS CHECK(UPPER(STATUS) IN ('NÃO INICIADO', 'EM PROGRESSO', 'CONCLUÍDO'))
);

CREATE TABLE PUBLICACAO(
    ID NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL,
    PESSOA NUMBER NOT NULL,
    DATA_HORA DATE NOT NULL,
    CONTEUDO VARCHAR2(300),
    CONSTRAINT PK_PUBLICACAO PRIMARY KEY (ID),
    CONSTRAINT SK_PUBLICACAO UNIQUE(PESSOA, DATA_HORA),
    CONSTRAINT FK1_PUBLICACAO FOREIGN KEY (PESSOA)
        REFERENCES PESSOA(ID)
        ON DELETE CASCADE
);

CREATE TABLE ANEXOS(
   PUBLICACAO NUMBER NOT NULL,
   NOME_ANEXO VARCHAR2(50),
   ANEXO BLOB,
   CONSTRAINT PK_ANEXOS PRIMARY KEY (PUBLICACAO, NOME_ANEXO),
   CONSTRAINT FK1_ANEXOS FOREIGN KEY (PUBLICACAO)
       REFERENCES PUBLICACAO(ID)
       ON DELETE CASCADE
);

CREATE TABLE CONVERSA(
    PESSOA1 NUMBER NOT NULL,
    PESSOA2 NUMBER NOT NULL, 
    CONSTRAINT PK_CONVERSA PRIMARY KEY (PESSOA1, PESSOA2),
    CONSTRAINT FK1_CONVERSA FOREIGN KEY (PESSOA1)
        REFERENCES PESSOA(ID)
        ON DELETE CASCADE,
    CONSTRAINT FK2_CONVERSA FOREIGN KEY (PESSOA2)
        REFERENCES PESSOA(ID)
        ON DELETE CASCADE,
    CONSTRAINT CK_PESSOAS CHECK (PESSOA1 <> PESSOA2)    
);

CREATE TABLE MENSAGEM(
    PESSOA1 NUMBER NOT NULL,
    PESSOA2 NUMBER NOT NULL,
    DATA_HORA_ENVIO DATE NOT NULL,
    TIPO VARCHAR2(20),
    DATA_HORA_VISUALIZACAO DATE,
    CONTEUDO VARCHAR2(300),
    CONSTRAINT PK_MENSAGEM PRIMARY KEY (PESSOA1, PESSOA2, DATA_HORA_ENVIO),
    CONSTRAINT FK_MENSAGEM FOREIGN KEY (PESSOA1, PESSOA2)
        REFERENCES CONVERSA(PESSOA1, PESSOA2)
        ON DELETE CASCADE,
    CONSTRAINT CK2_PESSOAS CHECK (PESSOA1 <> PESSOA2)    
);

CREATE TABLE COMENTARIO(
    PUBLICACAO NUMBER NOT NULL,
    DATA_HORA_COMENTARIO DATE NOT NULL,
    PESSOA NUMBER NOT NULL,
    CONTEUDO VARCHAR2(300),
    CONSTRAINT PK_COMENTARIO PRIMARY KEY (PUBLICACAO, DATA_HORA_COMENTARIO, PESSOA),
    CONSTRAINT FK1_COMENTARIO FOREIGN KEY (PUBLICACAO)
        REFERENCES PUBLICACAO(ID)
        ON DELETE CASCADE,
    CONSTRAINT FK2_COMENTARIO FOREIGN KEY (PESSOA)
        REFERENCES PESSOA(ID)
        ON DELETE CASCADE
);

CREATE TABLE PESSOA_CURTE_PUBLICACAO(
    PUBLICACAO NUMBER NOT NULL,
    PESSOA NUMBER NOT NULL,
    CONSTRAINT PK_PESSOA_CURTE_PUBLICACAO PRIMARY KEY (PUBLICACAO, PESSOA),
    CONSTRAINT FK1_PESSOA_CURTE_PUBLICACAO FOREIGN KEY (PUBLICACAO)
        REFERENCES PUBLICACAO(ID)
        ON DELETE CASCADE,
    CONSTRAINT FK2_PESSOA_CURTE_PUBLICACAO FOREIGN KEY (PESSOA)
        REFERENCES PESSOA(ID)
        ON DELETE CASCADE
);